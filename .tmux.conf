## keybindings
unbind C-b
unbind C-a
unbind % 
unbind ,
unbind .
unbind n
unbind p
unbind [
unbind '"'
unbind l
unbind &
unbind "'"
#unbind -T root WheelUpPane
#unbind -T root WheelDownPane
set -g prefix C-a


bind |      split-window -h
bind -      split-window -v
bind x      kill-pane
bind X      kill-window
bind-key -n C-_  display-panes
if-shell 'test "$(uname)" = "Darwin"' 'bind -n "KP*" resize-pane -Z'
if-shell 'test "$(uname)" = "Linux"' 'bind -n "C-y" resize-pane -Z'
bind ,      previous-window # <
bind .      next-window     # >
bind <      swap-window -t :-
bind >      swap-window -t :+
bind n      command-prompt 'rename-window %%'
bind N      command-prompt 'rename-session %%'
bind Escape copy-mode
bind r      source-file ~/.tmux.conf; display " ✱ ~/.tmux.conf is reloaded"
bind R      refresh-client
bind a      send-key C-a
bind C-a last-window
bind C-j    resize-pane -L 5
bind C-l    resize-pane -R 5
# bind C-k    resize-pane -D 5
# bind C-i    resize-pane -U 5
bind s send-prefix
bind w split-window "tmux lsw | selecta | cut -d':' -f 1 | xargs tmux select-window -t"

bind-key -n C-0 select-window -t :0
bind-key -n C-1 select-window -t :1
bind-key -n C-2 select-window -t :2
bind-key -n C-3 select-window -t :3
bind-key -n C-4 select-window -t :4
bind-key -n C-5 select-window -t :5
bind-key -n C-6 select-window -t :6
bind-key -n C-7 select-window -t :7
bind-key -n C-8 select-window -t :8
bind-key -n C-9 select-window -t :9

setw -g mouse on
bind-key -n End send-key C-e
bind-key -n Home send-key C-a
bind-key -T root -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' \"send-keys -M ; send-keys -M ; send-keys -M ;\" \"copy-mode -t=\""
bind-key -T root -n WheelDownPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' \"send-keys -M ; send-keys -M ; send-keys -M ;\" \"send-keys -M ; send-keys -M ; send-keys -M ;\""

bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
# FIXME - fix linux keys
# if-shell 'test "$(uname)" = "Darwin"' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
# if-shell 'test "$(uname)" = "Linux"' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p -b"'
# if-shell 'test "$(uname)" = "Linux"' 'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i -p -b"'
bind-key -T copy-mode-vi y if-shell "test ! -z $KITTY_WINDOW_ID" "send-keys -X copy-pipe-and-cancel 'kitty +kitten clipboard'" "send-keys -X copy-pipe-and-cancel  'pbcopy'"
bind-key -T copy-mode-vi MouseDragEnd1Pane if-shell "test ! -z $KITTY_WINDOW_ID" "send-keys -X copy-pipe-and-cancel 'kitty +kitten clipboard'" "send-keys -X copy-pipe-and-cancel  'pbcopy'"
unbind-key -T copy-mode-vi Enter
unbind-key -T copy-mode-vi n
bind-key -T copy-mode-vi Enter if-shell "test ! -z $KITTY_WINDOW_ID" "send-keys -X copy-pipe-and-cancel 'kitty +kitten clipboard'" "send-keys -X copy-pipe-and-cancel  'pbcopy'"
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# basic options
set -g default-terminal "screen-256color"
set -g status-keys vi
setw -g mode-keys vi
setw -g xterm-keys on
set -g bell-action none
set -g visual-bell off
set -g base-index 1
set -g pane-base-index 1   # start pane indices at 1
set -sg escape-time 0

# look and feel
#set -g status-left '#[fg=red]#H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]'
#set -g status-right '#[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'
## set status bar
set -g status-bg colour11
set -g status-fg colour8
set -g default-shell $SHELL
#if-shell 'test "$(uname)" = "Darwin"' 'set -g default-command "shell > /dev/null 2>&1; /usr/local/bin/reattach-to-user-namespace -l /usr/local/bin/zsh"'
#if-shell 'test "$(uname)" = "Linux"' 'set -g default-command "/usr/bin/zsh"'
#set-option -g default-command "shell > /dev/null 2>&1; /usr/local/bin/reattach-to-user-namespace -l /usr/local/bin/zsh"
set-option -g default-command "/usr/local/bin/zsh"
set-option -g renumber-windows on


set -g status-style bg=cyan
setw -g window-status-current-style "bg=green,bold,fg=white"
set -g set-titles on
set -g set-titles-string '#S:#I #W' # window number,program name,active (or not)
setw -g automatic-rename off # auto name
set -g allow-rename off # auto name

set -g focus-events on
set -g status-justify left
set -g status-style bg=black,fg=cyan
set -g status-interval 5
set -g status-left ' #[bold]❐ #S#[default] ⡇'
set -g status-right '#[bold]#(whoami) ● #H#[default] '
set -g status-right-length 60
set -g status-left-length 60

## highlight active window
set-window-option -g window-status-current-style bg=colour166,fg=colour15,bold
set-window-option -g pane-active-border-style ''
#set-window-option -g window-status-current-format ' #I #W '

## pane border and colors
set -g pane-active-border-style fg=yellow
set -g pane-border-style fg=white

setw -g mode-style bg=magenta,fg=black
set -g message-style bg=magenta,fg=black

#setw -g automatic-rename

set -g @resurrect-processes ':all:'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @continuum-save-interval '2'
set -g @continuum-restore 'on'

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
run '~/.tmux/plugins/tpm/tpm'

