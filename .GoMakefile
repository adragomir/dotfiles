.PHONY: help run test test-race build build-race dist clean tools dist-tools deps update-deps vendor release

HARDWARE=$(shell uname -m)

all:
	@echo "make <cmd>"
	@echo ""
	@echo "commands:"
	@echo "  link                  - link package to path"
	@echo "  run                   - run in dev mode"
	@echo "  test                  - run go tests"
	@echo "  build                 - build binaries into bin/ directory"
	@echo "  clean                 - clean up bin/ directory"
	@echo ""
	@echo "  deps                  - pull and setup dependencies"
	@echo "  update-deps           - update deps lock file from ./..."
	@echo "  vendor                - rebuild vendor/ directory from deps"

print-%: ; @echo $*=$($*)

prepare:
	@mkdir -p release
	@mkdir -p vendor
	@mkdir -p src
	@mkdir -p src/$(PACKAGE)
	@ln -nfs $$(grealpath vendor) src/vendor

link: prepare
	@gfind . -regextype posix-extended -mindepth 1 -maxdepth 1 -iname "*" \( ! -iregex ".*(vendor|src|Makefile|pkg)" \) \
		-exec gln -nfs $$(grealpath {}) src/$(PACKAGE)/$$(basename {}) \;

deps-gvt:
	@gvt rebuild

build: link deps
	@GOPATH=$$(grealpath .) GO15VENDOREXPERIMENT=1 go build -i -ldflags "$(LDFLAGS)" -o release/$(TARGET).local $(PACKAGE)

build-race: link 
	@GOPATH=$$(grealpath .) GO15VENDOREXPERIMENT=1 go build -race -i -ldflags "$(LDFLAGS)" -o release/$(TARGET).race.local $(PACKAGE)

run: build
	@./release/$(TARGET).local

run-race: build-race
	@./release/$(TARGET).race.local

test: link deps
	@GOPATH=$$(grealpath .) GO15VENDOREXPERIMENT=1 go test -coverprofile=$(TARGET).coverprofile $(PACKAGE)/...

test-race: link
	@GOPATH=$$(grealpath .) GO15VENDOREXPERIMENT=1 go test -race -coverprofile=$(TARGET).coverprofile $(PACKAGE)/...

vet: link deps
	@GOPATH=$$(grealpath .) GO15VENDOREXPERIMENT=1 go vet $(PACKAGE)/...

lint: link deps
	@GOPATH=$$(grealpath .) GO15VENDOREXPERIMENT=1 golint $(PACKAGE)/...

errcheck: link deps
	@GOPATH=$$(grealpath .) GO15VENDOREXPERIMENT=1 goerrcheck $(PACKAGE)/...

coverage: test
	@GOPATH=$$(grealpath .) GO15VENDOREXPERIMENT=1 go tool cover -html=$(TARGET).coverprofile -o $(TARGET).coverprofile.html
	@open $(TARGET).coverprofile.html

release: 
	rm -rf release
	mkdir -p release
	mkdir -p release/$(TARGET)-$(VERSION)
	@GOPATH=$$(grealpath .) GO15VENDOREXPERIMENT=1 GOOS=linux go build -o release/$(TARGET)-$(VERSION)/$(TARGET)
	cp -a $(DEPS) release/$(TARGET)-$(VERSION)/
	cd release && tar -zcf $(TARGET)-$(VERSION).tar.gz $(TARGET)
	rm -rf release/$(TARGET)-$(VERSION)
	@GOPATH=$$(grealpath .) GO15VENDOREXPERIMENT=1 GOOS=darwin go build -o release/$(TARGET)-$(VERSION)/$(TARGET)
	cp -a $(DEPS) release/$(TARGET)-$(VERSION)/
	cd release && tar -zcf $(TARGET)-$(VERSION)-darwin.tar.gz $(TARGET)
	rm -rf release/$(TARGET)-$(VERSION)
