#!/bin/bash

arch=$(uname -p)
os=$(uname)
# get app image for Ubuntu
[[ ! $(type -P "nvim") ]] && {
  sudo apt update
  sudo apt install snapd
  sudo snap install nvim --classic
}
sudo apt-get -y install build-essential tmux python3 python3-dev ruby libluajit-5.1-dev luajit ruby-dev nodejs npm ripgrep python3-venv zsh fzy git
git clone https://github.com/adragomir/dotfiles

mkdir -p ~/.local/share/nvim/{bundle,lspconfig,shada,undo}
mkdir -p ~/.config/nvim/{autoload,colors}
ln -s ${HOME}/dotfiles/.vimrc ${HOME}/.config/nvim/init.vim
ln -s ${HOME}/dotfiles/.vim/autoload ${HOME}/.config/nvim/autoload
ln -s ${HOME}/dotfiles/.vim/colors ${HOME}/.config/nvim/colors
mkdir -p ~/.zsh
mkdir -p ~/.history
ln -s ${HOME}/dotfiles/.zshrc ${HOME}/.zshrc
ln -s ${HOME}/dotfiles/.zsh ${HOME}/.zsh
mkdir -p ~/.tmux/
ln -s ${HOME}/dotfiles/.tmux.conf ${HOME}/.tmux.conf
ln -s ${HOME}/dotfiles/.tmux/plugins ${HOME}/.tmux/plugins

pip3 install neovim
sudo gem install neovim
sudo npm install -g neovim

sudo chsh -s /usr/bin/zsh adragomi
curl -fsSL https://fnm.vercel.app/install | bash
curl -fsSL -o frum-v0.1.2-${arch}-unknown-linux-musl.tar.gz https://github.com/TaKO8Ki/frum/releases/download/v0.1.2/frum-v0.1.2-${arch}-unknown-linux-musl.tar.gz
tar zxf frum-v0.1.2-${arch}-unknown-linux-musl.tar.gz
sudo mv frum-v0.1.2-${arch}-unknown-linux-musl/frum /usr/local/bin/frum
sudo chmod +x /usr/local/bin/frum
rm -rf frum*

ln -s ${HOME}/dotfiles/bin ${HOME}/bin
ln -s ${HOME}/dotfiles/.config/fish ${HOME}/.config/fish
ln -s ${HOME}/dotfiles/.config/rubocop ${HOME}/.config/rubocop
ln -s ${HOME}/dotfiles/.config/flake8 ${HOME}/.config/flake8
ln -s ${HOME}/dotfiles/.config/pycodestyle ${HOME}/.config/pycodestyle
ln -s ${HOME}/dotfiles/.tmux/plugins ${HOME}/.tmux/plugins

ln -s ${HOME}/dotfiles/.inputrc ${HOME}/.inputrc
ln -s ${HOME}/dotfiles/.gitconfig ${HOME}/.gitconfig
ln -s ${HOME}/dotfiles/.gitignore_global ${HOME}/.gitignore
ln -s ${HOME}/dotfiles/.gdbinit ${HOME}/.gdbinit
ln -s ${HOME}/dotfiles/.lldbinit ${HOME}/.lldbinit

if [[ "${os}" == "Darwin" ]]; then
  curl -fsSL -o zigup.ubuntu-latest.zip https://github.com/marler8997/zigup/releases/download/v2022_07_04/zigup.macos-latest.zip
  unzip zigup.macos-latest.zip
  mv zigup ~/bin/darwin/zigup
else
  curl -fsSL -o zigup.ubuntu-latest.zip https://github.com/marler8997/zigup/releases/download/v2022_07_04/zigup.ubuntu-latest.zip
  unzip zigup.ubuntu-latest.zip
  mv zigup ~/bin/linux/zigup
  chmod +x ~/bin/linux/zigup
  rm zigup*.zip
fi

if [[ "${os}" == "Darwin" ]]; then
  curl -fsSL -o ape https://justine.lol/ape.macho
  chmod +x ape
  sudo mv ape /usr/local/bin/ape
else
  curl -fsSL -o ape https://justine.lol/ape.elf
  chmod +x ape
  sudo mv ape /usr/bin/ape
fi

