*StlShowFunc.txt*	Showing Functions in the Status Line	Sep 13, 2007

Author:    Charles E. Campbell, Jr.  <NdrOchip@ScampbellPfamily.AbizM>

           (remove NOSPAM from Campbell's email first)

Copyright: (c) 2004-2007 by Charles E. Campbell, Jr.	*StlShowFunc-copyright*
           The VIM LICENSE applies to StlShowFunc.vim,
           ftplugin/c/StlShowFunc_c.vim, ftplugin/dbg/StlShowFunc_dbg.vim,
           ftplugin/matlab/StlShowFunc_m.vim, ftplugin/vim/StlShowFunc_vim.vim,
           (see |copyright|) except use "StlShowFunc and associated functions"
           instead of "Vim"
No warranty, express or implied.  Use At-Your-Own-Risk.

==============================================================================
1. Contents				*StlShowFunc* *StlShowFunc-contents*

    1. Contents.........................................: |StlShowFunc|
    2. StlShowFunc Manual...............................: |StlShowFunc-manual|
    3. StlShowFunc History..............................: |StlShowFunc-history|

==============================================================================
2. StlShowFunc Manual				*StlShowFunc-manual*

   The StlShowFunc plugin and associated filetype plugins manipulate the
   status line to show the name of the function that the cursor is in.  In
   addition, information on the filename, current line and column, and much
   else is also displayed.  Note that your current statusline option is
   overridden with this plugin, although you can restore it by typing >
   	:StlShowFunc!
<
   If you'd like to change the colorization, define highlighting groups User1,
   User2, and User3 as you wish.  The plugin sets up defaults for them: >

	hi User1 ctermfg=white ctermbg=blue guifg=white guibg=blue
	hi User2 ctermfg=cyan  ctermbg=blue guifg=cyan  guibg=blue
	hi User3 ctermfg=green ctermbg=blue guifg=green guibg=blue
<
   An example of the status line: >

 StlShowFunc.vim StlShowFunc() 73,1 Bot Win#1 156x21 Thu May 25, 2006, 01:00:57 PM

<  Currently, the cursor is in the StlShowFunc() in StlShowFunc.vim.

   The plugin uses the new (as of vim 7.0) CursorMoved event to trigger a check on
   whether or not the cursor has moved from one function to another.

COMMANDS

   StlShowFunc [lang]    : turn StlShowFunc on for the given language
                           At this time, currently supported languages
			   include:
                              cpp  matlab  c      perl 
                              dbg  sh      maple  vim  

   StlShowFunc!          : turn off StlShowFunc


HOW IT WORKS

   In short form: the StlShowFunc utility modifies the |'statusline'| option
   to call a function which returns a string based on window number.  It also
   sets up a CursorMoved event which, whenever the cursor is moved, checks to
   see if the enclosing function name has changed and, if it has, sets a
   script and window-associated variable to that function name.

   Here's an overview of StlShowFunc's components:

   plugin/StlShowFunc.vim:~

     * sets up a |CursorMoved| |autocommand| event so that, when the
       cursor is moved, a check is made to determine if the containing
       function has changed  (ShowFuncSetup())

     * StlSetFunc(), which assigns a function name to a window by changing
       the |'statusline'| option.  It clears the association if given a "".

     * StlShowFunc(), which maps the window number to the associated
       StlShowFunc_[language]() function.
   
   ftplugin/[lang]/StlShowFunc_[lang].vim~

     * Provides the function StlShowFunc_[lang](), which determines what
       function the cursor is currently in and calls StlSetFunc(funcname)
       when that function name changes and calls StlSetFunc("") when the
       cursor is not currently inside a function).

     * Invokes  StlShowFunc "[lang]"  to initialize the StlShowFunc system
       for that window and language.

   Here's a more detailed sequence of events involved in the function name
   update:

     * Initially, for supported languages, the ftplugin handler for the language
       invokes StlShowFunc "[lang]", which calls s:ShowFuncSetup().

     * This function then installs a CursorMoved autocommand event, so that when
       the cursor is moved, StlShowFunc_[lang]() is called.  It also calls
       that handler to initialize a variable holding the name of the function
       (if any) that the cursor is in.

     * StlFuncSetup() then sets up the status line option (|'stl'|) to call
       StlShowFunc() (as well as to show other items on the status line).

     * When the cursor is moved, the |CursorMoved| event is triggered.  This
       event thus invokes StlShowFunc_[lang]()

     * StlShowFunc_[lang]() determines what the name of the function that the
       cursor currently resides in is called.  It calls StlSetFunc(funcname).

     * StlSetFunc(funcname) sets a script variable, s:stlshowfunc_{winnr()},
       to that function name.  These variables are window-oriented, so one
       may have multiple windows opened on the same file, each with their
       own function name associated with their own cursor position.

     * The |'statusline'| option also triggers a refresh of the status line.
       The |'statusline'| option as set by StlFuncSetup() calls StlShowFunc()
       as part of the status line refresh.

     * The StlShowFunc() returns the string in s:stlshowfunc_{winnr()}.


==============================================================================
3. StlShowFunc History				*StlShowFunc-history* {{{1
   v2 Jun 07, 2006 * modified ftplugin/StlShowFunc*.vim files to only update
                     the statusline when vim is in normal mode.
   v1 May 25, 2006 * initial release

==============================================================================
4. Modelines: {{{1
